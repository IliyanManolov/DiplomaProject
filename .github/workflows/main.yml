name: Pipeline Execution

on:
  push:
    branches: [ "master", "dev" ]
  pull_request:
    branches: [ "master", "dev" ]

jobs:

  build-api:
    name: Build API application
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Build API project
        run: dotnet build ./API/HomeOwners.Web.API/HomeOwners.Web.API.csproj --configuration Release

  build-web:
    name: Build WEB
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Build Web project
        run: dotnet build ./Frontend/HomeOwners.Web.UI/HomeOwners.Web.UI.csproj --configuration Release

  api-tests:
    name: Execute API Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --no-restore --configuration Release

      - name: Run tests with coverage
        working-directory: tests/API.Tests
        run: |
          dotnet test API.Tests.csproj \
            --no-build \
            --configuration Release \
            --collect:"XPlat Code Coverage" \
            --results-directory ./TestResults

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool
        
      - name: Generate coverage report
        run: |
          reportgenerator \
            -reports:"TestResults/**/coverage.cobertura.xml" \
            -targetdir:"CoverageReport" \
            -reporttypes:Cobertura

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: CoverageReport
